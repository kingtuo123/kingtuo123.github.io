<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>docker on king's blog</title><link>https://kingtuo123.com/categories/docker/</link><description>Recent content in docker on king's blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 11 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://kingtuo123.com/categories/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker基本命令</title><link>https://kingtuo123.com/posts/docker-base-cmd/</link><pubDate>Fri, 11 Mar 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/docker-base-cmd/</guid><description>docker镜像 拉取镜像 docker image pull &amp;lt;repository&amp;gt;:&amp;lt;tag&amp;gt; 查看镜像 docker image ls -a docker images 删除镜像 docker image rm &amp;lt;repository&amp;gt;:&amp;lt;tag&amp;gt; docker image rm &amp;lt;image id&amp;gt; id不用补全，比如 ba6acccedd29 ，只需输入 ba ，只要id前几位没和其他镜像重复。
当镜像已有创建的容器时，无法删除。可以使用-f参数强制删除。
提交镜像 首先你在基础镜像生成的容器中做了修改后，使用 commit 命令可以生成一个新的镜像，这个镜像相较于基础镜像多了一层Layer（你在容器内做的所有修改都打包成了Layer）
docker commit -m &amp;#34;some info&amp;#34; 生成的镜像可以用 image 命令查看到，commit 之后你可以使用 push 命令推送到远端仓库
docker容器 创建容器 以下命令会自动创建一个容器并运行bash，也可以用 create 命令创建容器。
docker container run --name &amp;lt;name&amp;gt; -it --rm &amp;lt;repository&amp;gt;:&amp;lt;tag&amp;gt; bash run 常用参数：
--name：指定容器名称 -i：开启标准输入 -t：分配伪终端 --rm：退出容器后自动删除容器，多用于一次性测试 -v：挂载路径，格式 -v &amp;lt;host path&amp;gt;:&amp;lt;container path&amp;gt; -p：指定端口映射，格式 -p &amp;lt;host port&amp;gt;:&amp;lt;container port&amp;gt; -P：随机端口映射，docker会随机映射一个端口到内部容器的网络端口 -d：后台运行容器，并返回容器ID，类似命令后加&amp;amp; -e：设置环境变量，格式 -e &amp;lt;variables1&amp;gt;=&amp;lt;variables2&amp;gt; --network：连接指定网络，系统预定义的有bridge、host、null三种，默认bridge（桥接） --privileged：扩大容器权限，在容器内可以看到host的更多设备、可mount挂载设备 启动容器 docker container start &amp;lt;name|container id&amp;gt; start 后面可跟多个 id</description></item></channel></rss>