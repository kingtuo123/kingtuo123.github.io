<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>stm32 on Notes</title><link>https://kingtuo123.com/categories/stm32/</link><description>Recent content in stm32 on Notes</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 26 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://kingtuo123.com/categories/stm32/index.xml" rel="self" type="application/rss+xml"/><item><title>STM32 移植 FatFs R0.15</title><link>https://kingtuo123.com/posts/stm32-fatfs/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/stm32-fatfs/</guid><description>stm32 移植 FatFs 并实现基本的读写功能</description></item><item><title>LCD12864 ST7565R</title><link>https://kingtuo123.com/posts/lcd12864-st7565r/</link><pubDate>Tue, 18 Jul 2023 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/lcd12864-st7565r/</guid><description>stm32 st7565r spi 驱动程序</description></item><item><title>STM32 SPI</title><link>https://kingtuo123.com/posts/stm32-spi/</link><pubDate>Fri, 14 Jul 2023 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/stm32-spi/</guid><description>SPI 通讯及 W25Q64JV Flash 驱动</description></item><item><title>STM32 I2C</title><link>https://kingtuo123.com/posts/stm32-i2c/</link><pubDate>Wed, 24 Aug 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/stm32-i2c/</guid><description>Note</description></item><item><title>STM32 DMA</title><link>https://kingtuo123.com/posts/stm32-dma/</link><pubDate>Wed, 10 Aug 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/stm32-dma/</guid><description>Note</description></item><item><title>STM32 寄存器描述表中使用的缩写列表</title><link>https://kingtuo123.com/posts/stm32-abbreviations-for-registers/</link><pubDate>Wed, 10 Aug 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/stm32-abbreviations-for-registers/</guid><description>Note</description></item><item><title>STM32 USART</title><link>https://kingtuo123.com/posts/stm32-usart/</link><pubDate>Thu, 04 Aug 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/stm32-usart/</guid><description>Note</description></item><item><title>STM32 SysTick</title><link>https://kingtuo123.com/posts/stm32-systick/</link><pubDate>Thu, 28 Jul 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/stm32-systick/</guid><description>Note</description></item><item><title>STM32 EXTI 外部中断</title><link>https://kingtuo123.com/posts/stm32-exti/</link><pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/stm32-exti/</guid><description>Note</description></item><item><title>STM32 RCC 时钟配置</title><link>https://kingtuo123.com/posts/stm32-rcc-config/</link><pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/stm32-rcc-config/</guid><description>Note</description></item><item><title>Linux 下编译 STM32</title><link>https://kingtuo123.com/posts/build-stm32-in-linux/</link><pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/build-stm32-in-linux/</guid><description>使用 make 管理 stm32 工程</description></item><item><title>STM32 GPIO</title><link>https://kingtuo123.com/posts/stm32-gpio/</link><pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/stm32-gpio/</guid><description>Note</description></item><item><title>STM32 位带操作</title><link>https://kingtuo123.com/posts/stm32-bit-banding/</link><pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/stm32-bit-banding/</guid><description>Note</description></item><item><title>Linux 下使用 stlink 烧录程序</title><link>https://kingtuo123.com/posts/stlink-linux/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/stlink-linux/</guid><description>stlink 工具命令用法</description></item><item><title>STM32 常用资源</title><link>https://kingtuo123.com/posts/stm32-resources/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/stm32-resources/</guid><description>一些常用资源的下载链接</description></item><item><title>Linux 下搭建 stm32 开发环境</title><link>https://kingtuo123.com/posts/linux-stm32-development/</link><pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/linux-stm32-development/</guid><description>安装 gcc 工具链，isp / stlink 下载工具</description></item><item><title>从零编写 STM32 链接脚本</title><link>https://kingtuo123.com/posts/writing-linker-script-for-stm32-from-scratch/</link><pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/writing-linker-script-for-stm32-from-scratch/</guid><description>参考文章： Writing linker script for STM32 from scratch 链接脚本(Linker Scripts)语法和规则解析 LD链接脚本解析 硬件平台 STM32F103ZET6 野火霸道开发板 V2
准备工具 ARM GCC 工具链，参考此文安装：Linux 下搭建 STM32 开发环境
预备知识 STM32 启动模式 BOOT0 BOOT1 启动方式 0 X 内部flash，用户程序 1 0 系统存储器，BootLoader 0 1 内部SRAM，程序调试 内存映射 FLASH 起始地址是 0x0800 0000，SRAM 起始地址是 0x2000 0000
参考手册 Boot configuration 一节有这样一段话：
上电后，CPU 从地址 0x0000 0000 获取栈顶地址，然后从地址 0x0000 0004 处开始执行代码
当 CPU 从地址 0x00000000 读取数据，它实际上可能会访问不同的存储器，具体取决于所选的启动模式。这称为 内存映射。默认情况下，STM32 从 FLASH 启动，所以它将内存区域 0x08000000 映射到 0x00000000；然后就可以从其原始地址 0x08000000 或 0x00000000 访问 FLASH。这允许 CPU 直接从 FLASH 开始读取指令。</description></item><item><title>STM32 ISP 一键下载</title><link>https://kingtuo123.com/posts/stm32-isp-flash/</link><pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/stm32-isp-flash/</guid><description>ISP 一键下载原理，windows 和 linux 平台 ISP 下载方法</description></item></channel></rss>