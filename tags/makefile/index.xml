<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>makefile on king's blog</title><link>https://kingtuo123.com/tags/makefile/</link><description>Recent content in makefile on king's blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 01 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://kingtuo123.com/tags/makefile/index.xml" rel="self" type="application/rss+xml"/><item><title>Makefile基础</title><link>https://kingtuo123.com/posts/makefile-basic/</link><pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate><guid>https://kingtuo123.com/posts/makefile-basic/</guid><description>翻译自 Makefile Tutorial，部分有增删或修改，仅供参考。
Makefile 语法 makefile 由一组规则组成。如下所示：
targets: prerequisites command command command targets 是文件名，以空格分隔。通常一个规则只有一个目标。
command 通常是用于生成 targets 的一系列步骤。以 Tab 开头。
prerequisites 也是文件名，以空格分隔。这些文件也称为 依赖 ，需要在执行 command 之前存在。
示例 下面的 makefile 由三个单独的规则组成。当你在终端执行 make blah ，会以下面步骤运行并生成 blan 文件：
make 以 blah 作为目标，所以它首先搜索这个目标。 blah 需要 blah.o ，make 会搜索 blah.o 。 blah.o 需要 blah.c ，make会搜索 blah.c 。 blah.c 不需要依赖，所以会执行 echo 命令，生成 blah.c 。 blah.o 的依赖满足，会执行 cc -c 命令，生成 blah.</description></item></channel></rss>